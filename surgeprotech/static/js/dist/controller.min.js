"use strict";function isEmptyObject(e){for(var r in e)return!1;return!0}function loginController(e,r,t){e.formData={remember:!1},this.authenticate=function(o){t.login(o).then(function(t){isEmptyObject(t.data)?e.wrong=!0:r.path("/user")}),function(e){}},e.$on("session:created",function(r,t){e.setUser()})}function registerController(e,r,t){e.formData={password:""},e.cnfpass="",this.Register=function(){return e.formData.password!==e.cnfpass?void(e.error="Passowords don't match"):void t.register(e.formData).then(function(t){var o=t.data;1==o.success?(e.login=!0,e.setUser(),r.path("/user")):e.exists=!0})}}function uploadController(e,r,t,o){e.formData={},0!=e.currentUser.paper&&o.getPaper().get({paperId:e.currentUser.paper}).$promise.then(function(r){var t=JSON.parse(angular.toJson(r));e.formData.title=t.title,e.formData["abstract"]=t["abstract"],"link"in t&&(e.link=t.link)}),e.uploader=new r,e.uploader.url="http://surgeprotech.org/api/paper",e.uploadAbstract=function(){if(e.uploader.queue.length){var r=e.uploader.queue[0];r.upload()}else t.save(e.formData).$promise.then(function(r){1==r.success&&(e.success=!0,waitingDialog.hide())},function(r,t,o,n){waitingDialog.hide(),e.error=!0})},e.resetUpload=function(){e.uploader.clearQueue()},e.uploader.onBeforeUploadItem=function(r){r.formData.push(e.formData)},e.uploader.onSuccessItem=function(r,t,o,n){waitingDialog.hide(),e.success=!0}}function paperController(e,r){e.papers=[],e.currentPage=1;var t,o=5*(e.currentPage-1)+1,n=5*e.currentPage;r.getPaper().get().$promise.then(function(r){t=r.papers,e.papers=t.slice(o-1,n)}),e.next=function(){n>=t.length||(e.currentPage+=1,o=5*(e.currentPage-1)+1,n=5*e.currentPage,e.papers=t.slice(o-1,n))},e.previous=function(){1!=e.currentPage&&(e.currentPage-=1,o=5*(e.currentPage-1)+1,n=5*e.currentPage,e.papers=t.slice(o-1,n))}}function abstController(e,r,t,o,n){var a=new Date;e.review={rv_date:a.toUTCString()},0!=r.paperId?t.getPaper().get({paperId:r.paperId}).$promise.then(function(r){e.success=!0,e.paper=JSON.parse(angular.toJson(r)),e.paper.reviews=[],n.getComments(e.paper.p_id).success(function(r){e.paper.reviews=r})},function(r,t,o,n){e.failure=!0}):e.success=!0,e.addReview=function(r){r.rv_date=a.toUTCString(),r.p_id=e.paper.p_id,e.setUser(),r.author=e.currentUser.userId,o.add(r).then(function(){r.author=e.currentUser.userName,e.paper.reviews.reviews.push(r),e.review={}})}}function logoutController(e,r,t,o){r.logout().then(function(){t.path("/login"),o.destroy()})}function tabController(){Logout.logout()}loginController.$inject=["$scope","$location","AuthService"],registerController.$inject=["$scope","$location","RegisterService"],uploadController.$inject=["$scope","FileUploader","UploadAbstract","Papers"],paperController.$inject=["$scope","Papers"],abstController.$inject=["$scope","$routeParams","Papers","Review","Comments"],logoutController.$inject=["$scope","Logout","$location","Session"];